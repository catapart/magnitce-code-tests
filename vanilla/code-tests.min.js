var I=`:host\r
{\r
    user-select: none;\r
}\r
\r
:host([success="true"])\r
{\r
    color: green;\r
}\r
:host(.running)\r
{\r
    color: blue;\r
}\r
:host([success="false"])\r
{\r
    color: red;\r
}\r
\r
li[success="true"]\r
{\r
    color: green;\r
}\r
\r
li[success="false"]\r
{\r
    color: red;\r
}\r
li.running\r
{\r
    color: blue;\r
}`;var v=`<slot name="header">\r
    <header id="header">\r
        <slot name="title">Tests</slot>\r
        <button type="button" class="run" data-all>\u23F5</button>\r
    </header>\r
</slot>\r
<ul id="tests"></ul>`;var M=class extends Promise{async toBeDefined(){if(await this==null)throw new Error("Value is undefined")}async toBe(t,s=!1){let e=await this;if((s==!0?e===t:e==t)==!1)throw new Error(`  Value is not equal.
  Expected: ${t}
  Result: ${e}`)}async toContainText(t){let s=await this}async toHaveAttribute(t){let s=await this;if(!(s instanceof HTMLElement))throw new Error("Unable to check for attribute on non-HTMLElement target");if(s.getAttribute(t))throw new Error("Taret does not have attribute")}},m=Symbol("beforeAll"),p=Symbol("beforeEach"),E=Symbol("afterAll"),g=Symbol("afterEach"),y=class{static timeoutMS=500;static#t;static#e;static expect(t){return new M(async(e,o)=>{if(t instanceof Promise){let n=await t;e(n);return}e(t)})}};function q(f){return y.expect(f)}var B=new CSSStyleSheet;B.replaceSync(I);var O="code-tests",L=class extends HTMLElement{componentParts=new Map;getElement(t){if(this.componentParts.get(t)==null){let s=this.findElement(t);s!=null&&this.componentParts.set(t,s)}return this.componentParts.get(t)}findElement(t){return this.shadowRoot.getElementById(t)}#t=new Map;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=v,this.shadowRoot.adoptedStyleSheets.push(B),this.#e=this.#o.bind(this)}connectedCallback(){this.addEventListener("click",this.#e);let t=this.getAttribute("src")??this.getAttribute("test")??this.getAttribute("tests")??this.getAttribute("run")??this.getAttribute("path");t!=null&&this.loadTests(t)}disconnectedCallback(){this.removeEventListener("click",this.#e)}#e;#o(t){let s=t.composedPath().find(r=>r instanceof HTMLButtonElement&&r.classList.contains("run"));if(s==null)return;let e=s.closest("li");if(e==null){s.hasAttribute("data-all")==!0&&this.runTests();return}let o=e.dataset.testId;if(o==null)return;let n=this.#s.get(o);n!=null&&this.#n(o,n)}async loadTests(t){try{let s=window.location.href.lastIndexOf("/"),o=window.location.href.substring(s).indexOf(".")!=-1==!0?window.location.href.substring(0,s+1):window.location.href,n=o+t.substring(0,t.lastIndexOf("/")+1),r=o+t,a=await(await fetch(r)).text();a=a.replaceAll(/['"`](((\.\/)|(\.\.\/))+(.*))['"`]/g,`'${n}$1'`);let d=new File([a],t.substring(t.lastIndexOf("/")),{type:"text/javascript"}),T=await import(URL.createObjectURL(d)),i=T.tests??T.default;if(i==null)throw new Error(`Unable to find tests definition in file at path: ${t}`);let A=i[m];if(A!=null&&this.#t.get(m)==null){let l=new Map;l.set(A,new Set),this.#t.set(m,l)}let x=i[p];if(x!=null&&this.#t.get(p)==null){let l=new Map;l.set(x,new Set),this.#t.set(p,l)}let k=i[E];if(k!=null&&this.#t.get(E)==null){let l=new Map;l.set(k,new Set),this.#t.set(E,l)}let S=i[g];if(S!=null&&this.#t.get(g)==null){let l=new Map;l.set(S,new Set),this.#t.set(g,l)}for(let[w,l]of Object.entries(i)){let b=this.#r(w,l),H=i[m];if(H!=null){let c=this.#t.get(m);if(c!=null){let u=c.get(H);u?.add(b)}}let C=i[p];if(C!=null){let c=this.#t.get(p);if(c!=null){let u=c.get(C);u?.add(b)}}let R=i[E];if(R!=null){let c=this.#t.get(E);if(c!=null){let u=c.get(R);u?.add(b)}}let P=i[g];if(P!=null){let c=this.#t.get(g);if(c!=null){let u=c.get(P);u?.add(b)}}}}catch(s){this.#l("An error occurred while loading the tasks:",s)}}async runTests(){this.classList.add("running"),this.toggleAttribute("success",!1);let t=this.hasAttribute("in-order"),s=this.#t.get(m);if(s!=null)for(let[n,r]of s)n();if(t==!1){let n=[];for(let[r,a]of this.#s)n.push(this.#n(r,a));await Promise.all(n)}else for(let[n,r]of this.#s)await this.#n(n,r);let e=this.#t.get(E);if(e!=null)for(let[n,r]of e)n();let o=this.shadowRoot.querySelectorAll('[success="false"]');this.setAttribute("success",o.length==0?"true":"false"),this.classList.remove("running")}async#n(t,s){let e=this.getElement("tests").querySelector(`[data-test-id="${t}"]`);e?.toggleAttribute("success",!1),e?.classList.add("running");let o=e?.querySelector(".error-message");o!=null&&(o.textContent="");let n=e?.querySelector("details");n!=null&&(n.open=!1);try{let r=this.#t.get(p);if(r!=null)for(let[d,h]of r)h.has(t)&&d();await s();let a=this.#t.get(g);if(a!=null)for(let[d,h]of a)h.has(t)&&d();e?.classList.remove("running"),e?.setAttribute("success","true")}catch(r){e?.classList.remove("running"),e!=null&&this.#i(e,"Failed:",r),console.error(r)}}static create(t){let s=document.createElement("code-tests");return console.log(t),s}#s=new Map;#r(t,s){let e=U();this.#s.set(e,s);let o=document.createElement("li");o.dataset.testId=e;let n=document.createElement("details"),r=document.createElement("summary"),a=document.createElement("span");a.classList.add("description"),a.textContent=t,r.append(a);let d=document.createElement("button");d.classList.add("run"),d.textContent="\u23F5",d.title="Run Test",r.append(d);let h=document.createElement("div");h.classList.add("error");let T=document.createElement("code"),i=document.createElement("pre");return i.classList.add("error-message"),T.appendChild(i),h.appendChild(T),n.append(r),n.append(h),o.append(n),this.getElement("tests").append(o),e}#i(t,s,e){e instanceof Error&&(s+=`
${e.message}`),t.setAttribute("success","false");let o=t.querySelector(".error-message");o!=null&&(o.textContent=s);let n=t.querySelector("details");n!=null&&(n.open=!0)}#l(t,s){s instanceof Error&&(t+=`
${s.message}`);let e=document.createElement("li"),o=document.createElement("code"),n=document.createElement("pre");n.textContent=t,o.append(n),e.append(o),this.getElement("tests").append(e)}};function U(){let f=new Uint8Array(20);crypto.getRandomValues(f);let t=[].slice.apply(f).map(function(e){return String.fromCharCode(e)}).join("");return btoa(t).replace(/\//g,"_").replace(/\+/g,"-").replace(/=/g,"")}customElements.get(O)==null&&customElements.define(O,L);export{E as AFTERALL,g as AFTEREACH,m as BEFOREALL,p as BEFOREEACH,y as CodeTests,L as CodeTestsElement,q as expect};
