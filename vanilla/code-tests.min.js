var f=`:host([success="true"])\r
{\r
    color: green;\r
}\r
:host(.running)\r
{\r
    color: blue;\r
}\r
:host([success="false"])\r
{\r
    color: red;\r
}\r
\r
li[success="true"]\r
{\r
    color: green;\r
}\r
\r
li[success="false"]\r
{\r
    color: red;\r
}\r
li.running\r
{\r
    color: blue;\r
}`;var g=`<slot name="header">\r
    <header id="header">\r
        <slot name="title">Tests</slot>\r
        <button type="button" class="run" data-all>\u23F5</button>\r
    </header>\r
</slot>\r
<ul id="tests"></ul>`;var p=class extends Promise{async toBeDefined(){if(typeof await this>"u")throw new Error("Value is undefined")}async toBe(t,s=!1){let e=await this;if((s==!0?e===t:e==t)==!1)throw new Error(`  Value is not equal.
  Expected: ${t}
  Result: ${e}`)}async toContainText(t){let s=await this}async toHaveAttribute(t){let s=await this;if(!(s instanceof HTMLElement))throw new Error("Unable to check for attribute on non-HTMLElement target");if(s.getAttribute(t))throw new Error("Taret does not have attribute")}},m=class i{static timeoutMS=500;static#t;static#e;static expect(t){return new p(async(e,n)=>{if(t instanceof Promise){let o=await t;e(o);return}if(typeof t<"u"){e(t);return}this.#t!=null&&clearInterval(this.#t);let r=Date.now();this.#t=setInterval(()=>{Date.now()-r>i.timeoutMS&&(clearInterval(this.#t),n()),typeof t<"u"&&(clearInterval(this.#t),i.#e!=null?e(t):(console.error("Expect Promise is not set"),n()))},20)})}};function b(i){return m.expect(i)}var T=new CSSStyleSheet;T.replaceSync(f);var E="code-tests",h=class extends HTMLElement{componentParts=new Map;getElement(t){if(this.componentParts.get(t)==null){let s=this.findElement(t);s!=null&&this.componentParts.set(t,s)}return this.componentParts.get(t)}findElement(t){return this.shadowRoot.getElementById(t)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=g,this.shadowRoot.adoptedStyleSheets.push(T),this.#t=this.#e.bind(this)}connectedCallback(){this.addEventListener("click",this.#t);let t=this.getAttribute("src")??this.getAttribute("test")??this.getAttribute("tests")??this.getAttribute("run")??this.getAttribute("path");t!=null&&this.loadTests(t)}disconnectedCallback(){this.removeEventListener("click",this.#t)}#t;#e(t){let s=t.composedPath().find(o=>o instanceof HTMLButtonElement&&o.classList.contains("run"));if(s==null)return;let e=s.closest("li");if(e==null){s.hasAttribute("data-all")==!0&&this.runTests();return}let n=e.dataset.testId;if(n==null)return;let r=this.#s.get(n);r!=null&&this.#n(n,r)}async loadTests(t){try{let s=window.location.href,e=s+t.replace(/(.*?)[^/]*\..*$/,"$1"),n=s+t,r=await(await fetch(n)).text();r=r.replaceAll(/['"`](((\.\/)|(\.\.\/))+(.*))['"`]/g,`'${e}$1'`);let o=new File([r],t.substring(t.lastIndexOf("/")),{type:"text/javascript"}),a=await import(URL.createObjectURL(o)),c=a.tests??a.default;if(c==null)throw new Error(`Unable to find tests definition in file at path: ${t}`);for(let[u,d]of Object.entries(c))this.#r(u,d)}catch(s){this.#i("An error occurred while loading the tasks:",s)}}async runTests(){this.classList.add("running"),this.toggleAttribute("success",!1);let t=[];for(let[e,n]of this.#s)t.push(this.#n(e,n));await Promise.all(t);let s=this.shadowRoot.querySelectorAll('[success="false"]');this.setAttribute("success",s.length==0?"true":"false"),this.classList.remove("running")}async#n(t,s){let e=this.getElement("tests").querySelector(`[data-test-id="${t}"]`);e?.toggleAttribute("success",!1),e?.classList.add("running");let n=e?.querySelector(".error-message");n!=null&&(n.textContent="");let r=e?.querySelector("details");r!=null&&(r.open=!1);try{await s(),e?.classList.remove("running"),e?.setAttribute("success","true")}catch(o){e?.classList.remove("running"),e!=null&&this.#o(e,"Failed:",o),console.error(o)}}static create(t){let s=document.createElement("code-tests");return console.log(t),s}#s=new Map;#r(t,s){let e=L();this.#s.set(e,s);let n=document.createElement("li");n.dataset.testId=e;let r=document.createElement("details"),o=document.createElement("summary"),l=document.createElement("span");l.classList.add("description"),l.textContent=t,o.append(l);let a=document.createElement("button");a.classList.add("run"),a.textContent="\u23F5",a.title="Run Test",o.append(a);let c=document.createElement("div");c.classList.add("error");let u=document.createElement("code"),d=document.createElement("pre");d.classList.add("error-message"),u.appendChild(d),c.appendChild(u),r.append(o),r.append(c),n.append(r),this.getElement("tests").append(n)}#o(t,s,e){e instanceof Error&&(s+=`
${e.message}`),t.setAttribute("success","false");let n=t.querySelector(".error-message");n!=null&&(n.textContent=s);let r=t.querySelector("details");r!=null&&(r.open=!0)}#i(t,s){s instanceof Error&&(t+=`
${s.message}`);let e=document.createElement("li"),n=document.createElement("code"),r=document.createElement("pre");r.textContent=t,n.append(r),e.append(n),this.getElement("tests").append(e)}};function L(){let i=new Uint8Array(20);crypto.getRandomValues(i);let t=[].slice.apply(i).map(function(e){return String.fromCharCode(e)}).join("");return btoa(t).replace(/\//g,"_").replace(/\+/g,"-").replace(/=/g,"")}customElements.get(E)==null&&customElements.define(E,h);export{m as CodeTests,h as CodeTestsElement,b as expect};
